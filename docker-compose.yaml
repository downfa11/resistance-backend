version: '3'
services:
  kafka:
    image: bitnami/kafka:3.7.0
    restart: always
    container_name: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # KRaft settings
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - resistance_network
    volumes:
      - "kafka:/bitnami/kafka"

  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: always
    container_name: kafka-ui
    ports:
      - '8989:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft-standAlone
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true
      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999
    networks:
      - resistance_network

  mysql:
    image: mysql:8.0
    networks:
      - resistance_network
    volumes:
      - ./db/conf.d:/etc/mysql/conf.d
      - ./db/data:/var/lib/mysql
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_HOST=localhost
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=resistance
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw

  membership-service:
    image: membership-service:1.0.0
    networks:
      - resistance_network
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/resistance?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=mysqluser
      - SPRING_DATASOURCE_PASSWORD=mysqlpw
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:9092
      - LOGGING_TOPIC=logging.out.stdout
      - TASK_TOPIC=service.task.topic
      - TASK_RESULT_TOPIC=service.task.result.topic
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=1116
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_REPOSITORIES_ENABLED=false
      - EXPIRE_DEFAULTTIME=18000 # 친구목록의 캐싱은 만료시간이 길다

      - CONSUMER_GROUP=membership-server

  dedicated-service:
    image: dedicated-service:1.0.0
    networks:
      - resistance_network
    ports:
      - "8082:8080"
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/resistance?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=mysqluser
      - SPRING_DATASOURCE_PASSWORD=mysqlpw
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:9092
      - LOGGING_TOPIC=logging.out.stdout
      - TASK_TOPIC=service.task.topic
      - TASK_RESULT_TOPIC=service.task.result.topic
      - SPRING_CACHE_TYPE=redis
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=1116
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_REPOSITORIES_ENABLED=false
      - EXPIRE_DEFAULTTIME=18000 # 사실 게시글의 캐시도 길어도 된다. 바뀔 일이 잘없음.
      - CONSUMER_GROUP=dedicated-server

  business-service:
    image: business-service:1.0.0
    networks:
      - resistance_network
    ports:
      - "8083:8080"
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/resistance?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=mysqluser
      - SPRING_DATASOURCE_PASSWORD=mysqlpw
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:9092
      - LOGGING_TOPIC=logging.out.stdout
      - TASK_TOPIC=service.task.topic
      - TASK_RESULT_TOPIC=service.task.result.topic
      - SPRING_CACHE_TYPE=redis
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=1116
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_REPOSITORIES_ENABLED=false
      - EXPIRE_DEFAULTTIME=18000 #너는 좀 짧아야한다.
      - CONSUMER_GROUP=business-server

  logging-service:
    image: logging-service:1.0.0
    networks:
      - resistance_network
    restart: always
    environment:
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:9092
      - LOGGING_TOPIC=logging.out.stdout
      - TASK_TOPIC=service.task.topic


  redis:
    image: redis:6.2
    networks:
      - resistance_network
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=1116

networks:
  resistance_network:
    driver: bridge

volumes:
  kafka:
    driver: local